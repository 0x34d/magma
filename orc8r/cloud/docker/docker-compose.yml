version: "3.7"

services:
  postgres:
    image: postgres
    volumes:
      - $PWD/../../../.cache/orc8r/pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: magma_dev
      POSTGRES_PASSWORD: magma_dev
      POSTGRES_DB: magma_dev
    restart: always

  maria:
    image: mariadb:10.2
    volumes:
      - $PWD/../../../.cache/orc8r/mariadata:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: magma
      MYSQL_DATABASE: magma_dev
      MYSQL_USER: magma_dev
      MYSQL_PASSWORD: magma_dev
      SQL_MODE: ANSI_QUOTES
    command: mysqld --sql_mode="ANSI_QUOTES"
    restart: always

  proxy:
    ports:
      - 9443:9443/tcp  # API/controller port
      - 9444:9444/tcp  # Bootstrapper port
    volumes:
      - $PWD/../../../.cache/test_certs:/var/opt/magma/certs
    environment:
      CONTROLLER_HOSTNAME: controller.magma.test
      PROXY_BACKENDS: controller  # Uses Docker internal DNS for controller
      TEST_MODE: "1"  # Used to run dev scripts on startup
    restart: always

  controller:
    volumes:
      - $PWD/../../../.cache/test_certs:/var/opt/magma/certs
    environment:
      TEST_MODE: "1"  # Used to run dev scripts on startup
       SQL_DRIVER: postgres
       DATABASE_SOURCE: "dbname=magma_dev user=magma_dev password=magma_dev host=postgres sslmode=disable"
       SQL_DIALECT: psql
      # To use MariaDB, use these connection parameters instead:
#      SQL_DRIVER: mysql
#      DATABASE_SOURCE: "magma_dev:magma_dev@(maria)/magma_dev"
#      SQL_DIALECT: maria
    restart: always

  prometheus-cache:
    build:
      context: $PWD/../../../orc8r/cloud
      dockerfile: $PWD/prometheus-cache/Dockerfile
    restart: always

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090/tcp
    volumes:
      - $PWD/../../../orc8r/cloud/docker/config-manager/configs:/etc/prometheus:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    restart: always

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093/tcp
    volumes:
      - $PWD/../../../orc8r/cloud/docker/config-manager/configs:/etc/alertmanager:ro
    restart: always

  config-manager:
    volumes:
      - $PWD/../../../orc8r/cloud/docker/config-manager/configs:/etc/configs
    build:
      context: $PWD/../../../orc8r/cloud
      dockerfile: $PWD/config-manager/Dockerfile
    restart: always

  graphite:
    environment:
      - REDIS_TAGDB=1
    ports:
      - 8001:80/tcp
    volumes:
      - $PWD/graphite/storage-schemas.conf:/opt/graphite/conf/storage-schemas.conf
      - $PWD/graphite/carbon.conf:/opt/graphite/conf/carbon.conf
    image: graphiteapp/graphite-statsd

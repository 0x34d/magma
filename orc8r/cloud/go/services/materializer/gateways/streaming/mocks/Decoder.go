/*
Copyright (c) Facebook, Inc. and its affiliates.
All rights reserved.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree.
*/

// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import kafka "github.com/confluentinc/confluent-kafka-go/kafka"
import mock "github.com/stretchr/testify/mock"
import streaming "magma/orc8r/cloud/go/services/materializer/gateways/streaming"

// Decoder is an autogenerated mock type for the Decoder type
type Decoder struct {
	mock.Mock
}

// GetUpdateFromStateRecorderMessage provides a mock function with given fields: message
func (_m *Decoder) GetUpdateFromStateRecorderMessage(message *kafka.Message) (*streaming.KafkaGatewayUpdate, error) {
	ret := _m.Called(message)

	var r0 *streaming.KafkaGatewayUpdate
	if rf, ok := ret.Get(0).(func(*kafka.Message) *streaming.KafkaGatewayUpdate); ok {
		r0 = rf(message)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*streaming.KafkaGatewayUpdate)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*kafka.Message) error); ok {
		r1 = rf(message)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUpdateFromStreamAggregatorMessage provides a mock function with given fields: message
func (_m *Decoder) GetUpdateFromStreamAggregatorMessage(message *kafka.Message) (*streaming.KafkaGatewayUpdate, error) {
	ret := _m.Called(message)

	var r0 *streaming.KafkaGatewayUpdate
	if rf, ok := ret.Get(0).(func(*kafka.Message) *streaming.KafkaGatewayUpdate); ok {
		r0 = rf(message)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*streaming.KafkaGatewayUpdate)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*kafka.Message) error); ok {
		r1 = rf(message)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

/*
Copyright (c) Facebook, Inc. and its affiliates.
All rights reserved.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree.
*/

// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import mock "github.com/stretchr/testify/mock"
import storage "magma/orc8r/cloud/go/services/materializer/gateways/storage"

// GatewayViewStorage is an autogenerated mock type for the GatewayViewStorage type
type GatewayViewStorage struct {
	mock.Mock
}

// DeleteGatewayViews provides a mock function with given fields: networkID, gatewayIDs
func (_m *GatewayViewStorage) DeleteGatewayViews(networkID string, gatewayIDs []string) error {
	ret := _m.Called(networkID, gatewayIDs)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, []string) error); ok {
		r0 = rf(networkID, gatewayIDs)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetGatewayViews provides a mock function with given fields: networkID, gatewayIDs
func (_m *GatewayViewStorage) GetGatewayViews(networkID string, gatewayIDs []string) (map[string]*storage.GatewayState, error) {
	ret := _m.Called(networkID, gatewayIDs)

	var r0 map[string]*storage.GatewayState
	if rf, ok := ret.Get(0).(func(string, []string) map[string]*storage.GatewayState); ok {
		r0 = rf(networkID, gatewayIDs)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]*storage.GatewayState)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, []string) error); ok {
		r1 = rf(networkID, gatewayIDs)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetGatewayViewsForNetwork provides a mock function with given fields: networkID
func (_m *GatewayViewStorage) GetGatewayViewsForNetwork(networkID string) (map[string]*storage.GatewayState, error) {
	ret := _m.Called(networkID)

	var r0 map[string]*storage.GatewayState
	if rf, ok := ret.Get(0).(func(string) map[string]*storage.GatewayState); ok {
		r0 = rf(networkID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]*storage.GatewayState)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(networkID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// InitTables provides a mock function with given fields:
func (_m *GatewayViewStorage) InitTables() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateOrCreateGatewayViews provides a mock function with given fields: networkID, updates
func (_m *GatewayViewStorage) UpdateOrCreateGatewayViews(networkID string, updates map[string]*storage.GatewayUpdateParams) error {
	ret := _m.Called(networkID, updates)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, map[string]*storage.GatewayUpdateParams) error); ok {
		r0 = rf(networkID, updates)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

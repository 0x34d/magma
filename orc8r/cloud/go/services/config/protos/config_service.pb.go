// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config_service.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import protos "magma/orc8r/cloud/go/protos"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ConfigFilter struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigFilter) Reset()         { *m = ConfigFilter{} }
func (m *ConfigFilter) String() string { return proto.CompactTextString(m) }
func (*ConfigFilter) ProtoMessage()    {}
func (*ConfigFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_service_b0e44edaca911c13, []int{0}
}
func (m *ConfigFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigFilter.Unmarshal(m, b)
}
func (m *ConfigFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigFilter.Marshal(b, m, deterministic)
}
func (dst *ConfigFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigFilter.Merge(dst, src)
}
func (m *ConfigFilter) XXX_Size() int {
	return xxx_messageInfo_ConfigFilter.Size(m)
}
func (m *ConfigFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigFilter proto.InternalMessageInfo

func (m *ConfigFilter) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ConfigFilter) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type Config struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_service_b0e44edaca911c13, []int{1}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Config) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Config) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type GetOrDeleteConfigsRequest struct {
	NetworkId            string        `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	Filter               *ConfigFilter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetOrDeleteConfigsRequest) Reset()         { *m = GetOrDeleteConfigsRequest{} }
func (m *GetOrDeleteConfigsRequest) String() string { return proto.CompactTextString(m) }
func (*GetOrDeleteConfigsRequest) ProtoMessage()    {}
func (*GetOrDeleteConfigsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_service_b0e44edaca911c13, []int{2}
}
func (m *GetOrDeleteConfigsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrDeleteConfigsRequest.Unmarshal(m, b)
}
func (m *GetOrDeleteConfigsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrDeleteConfigsRequest.Marshal(b, m, deterministic)
}
func (dst *GetOrDeleteConfigsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrDeleteConfigsRequest.Merge(dst, src)
}
func (m *GetOrDeleteConfigsRequest) XXX_Size() int {
	return xxx_messageInfo_GetOrDeleteConfigsRequest.Size(m)
}
func (m *GetOrDeleteConfigsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrDeleteConfigsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrDeleteConfigsRequest proto.InternalMessageInfo

func (m *GetOrDeleteConfigsRequest) GetNetworkId() string {
	if m != nil {
		return m.NetworkId
	}
	return ""
}

func (m *GetOrDeleteConfigsRequest) GetFilter() *ConfigFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type GetConfigsResponse struct {
	Configs              []*Config `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetConfigsResponse) Reset()         { *m = GetConfigsResponse{} }
func (m *GetConfigsResponse) String() string { return proto.CompactTextString(m) }
func (*GetConfigsResponse) ProtoMessage()    {}
func (*GetConfigsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_service_b0e44edaca911c13, []int{3}
}
func (m *GetConfigsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigsResponse.Unmarshal(m, b)
}
func (m *GetConfigsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigsResponse.Marshal(b, m, deterministic)
}
func (dst *GetConfigsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigsResponse.Merge(dst, src)
}
func (m *GetConfigsResponse) XXX_Size() int {
	return xxx_messageInfo_GetConfigsResponse.Size(m)
}
func (m *GetConfigsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigsResponse proto.InternalMessageInfo

func (m *GetConfigsResponse) GetConfigs() []*Config {
	if m != nil {
		return m.Configs
	}
	return nil
}

type GetOrDeleteConfigRequest struct {
	NetworkId            string   `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Key                  string   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrDeleteConfigRequest) Reset()         { *m = GetOrDeleteConfigRequest{} }
func (m *GetOrDeleteConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetOrDeleteConfigRequest) ProtoMessage()    {}
func (*GetOrDeleteConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_service_b0e44edaca911c13, []int{4}
}
func (m *GetOrDeleteConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrDeleteConfigRequest.Unmarshal(m, b)
}
func (m *GetOrDeleteConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrDeleteConfigRequest.Marshal(b, m, deterministic)
}
func (dst *GetOrDeleteConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrDeleteConfigRequest.Merge(dst, src)
}
func (m *GetOrDeleteConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetOrDeleteConfigRequest.Size(m)
}
func (m *GetOrDeleteConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrDeleteConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrDeleteConfigRequest proto.InternalMessageInfo

func (m *GetOrDeleteConfigRequest) GetNetworkId() string {
	if m != nil {
		return m.NetworkId
	}
	return ""
}

func (m *GetOrDeleteConfigRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *GetOrDeleteConfigRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type ListKeysForTypeRequest struct {
	NetworkId            string   `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListKeysForTypeRequest) Reset()         { *m = ListKeysForTypeRequest{} }
func (m *ListKeysForTypeRequest) String() string { return proto.CompactTextString(m) }
func (*ListKeysForTypeRequest) ProtoMessage()    {}
func (*ListKeysForTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_service_b0e44edaca911c13, []int{5}
}
func (m *ListKeysForTypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListKeysForTypeRequest.Unmarshal(m, b)
}
func (m *ListKeysForTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListKeysForTypeRequest.Marshal(b, m, deterministic)
}
func (dst *ListKeysForTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListKeysForTypeRequest.Merge(dst, src)
}
func (m *ListKeysForTypeRequest) XXX_Size() int {
	return xxx_messageInfo_ListKeysForTypeRequest.Size(m)
}
func (m *ListKeysForTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListKeysForTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListKeysForTypeRequest proto.InternalMessageInfo

func (m *ListKeysForTypeRequest) GetNetworkId() string {
	if m != nil {
		return m.NetworkId
	}
	return ""
}

func (m *ListKeysForTypeRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type ListKeysForTypeResponse struct {
	Keys                 []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListKeysForTypeResponse) Reset()         { *m = ListKeysForTypeResponse{} }
func (m *ListKeysForTypeResponse) String() string { return proto.CompactTextString(m) }
func (*ListKeysForTypeResponse) ProtoMessage()    {}
func (*ListKeysForTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_service_b0e44edaca911c13, []int{6}
}
func (m *ListKeysForTypeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListKeysForTypeResponse.Unmarshal(m, b)
}
func (m *ListKeysForTypeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListKeysForTypeResponse.Marshal(b, m, deterministic)
}
func (dst *ListKeysForTypeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListKeysForTypeResponse.Merge(dst, src)
}
func (m *ListKeysForTypeResponse) XXX_Size() int {
	return xxx_messageInfo_ListKeysForTypeResponse.Size(m)
}
func (m *ListKeysForTypeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListKeysForTypeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListKeysForTypeResponse proto.InternalMessageInfo

func (m *ListKeysForTypeResponse) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type CreateOrUpdateConfigRequest struct {
	NetworkId            string   `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Key                  string   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOrUpdateConfigRequest) Reset()         { *m = CreateOrUpdateConfigRequest{} }
func (m *CreateOrUpdateConfigRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOrUpdateConfigRequest) ProtoMessage()    {}
func (*CreateOrUpdateConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_service_b0e44edaca911c13, []int{7}
}
func (m *CreateOrUpdateConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOrUpdateConfigRequest.Unmarshal(m, b)
}
func (m *CreateOrUpdateConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOrUpdateConfigRequest.Marshal(b, m, deterministic)
}
func (dst *CreateOrUpdateConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOrUpdateConfigRequest.Merge(dst, src)
}
func (m *CreateOrUpdateConfigRequest) XXX_Size() int {
	return xxx_messageInfo_CreateOrUpdateConfigRequest.Size(m)
}
func (m *CreateOrUpdateConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOrUpdateConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOrUpdateConfigRequest proto.InternalMessageInfo

func (m *CreateOrUpdateConfigRequest) GetNetworkId() string {
	if m != nil {
		return m.NetworkId
	}
	return ""
}

func (m *CreateOrUpdateConfigRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CreateOrUpdateConfigRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CreateOrUpdateConfigRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type NetworkIdRequest struct {
	NetworkId            string   `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkIdRequest) Reset()         { *m = NetworkIdRequest{} }
func (m *NetworkIdRequest) String() string { return proto.CompactTextString(m) }
func (*NetworkIdRequest) ProtoMessage()    {}
func (*NetworkIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_service_b0e44edaca911c13, []int{8}
}
func (m *NetworkIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkIdRequest.Unmarshal(m, b)
}
func (m *NetworkIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkIdRequest.Marshal(b, m, deterministic)
}
func (dst *NetworkIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkIdRequest.Merge(dst, src)
}
func (m *NetworkIdRequest) XXX_Size() int {
	return xxx_messageInfo_NetworkIdRequest.Size(m)
}
func (m *NetworkIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkIdRequest proto.InternalMessageInfo

func (m *NetworkIdRequest) GetNetworkId() string {
	if m != nil {
		return m.NetworkId
	}
	return ""
}

func init() {
	proto.RegisterType((*ConfigFilter)(nil), "magma.orc8r.config.ConfigFilter")
	proto.RegisterType((*Config)(nil), "magma.orc8r.config.Config")
	proto.RegisterType((*GetOrDeleteConfigsRequest)(nil), "magma.orc8r.config.GetOrDeleteConfigsRequest")
	proto.RegisterType((*GetConfigsResponse)(nil), "magma.orc8r.config.GetConfigsResponse")
	proto.RegisterType((*GetOrDeleteConfigRequest)(nil), "magma.orc8r.config.GetOrDeleteConfigRequest")
	proto.RegisterType((*ListKeysForTypeRequest)(nil), "magma.orc8r.config.ListKeysForTypeRequest")
	proto.RegisterType((*ListKeysForTypeResponse)(nil), "magma.orc8r.config.ListKeysForTypeResponse")
	proto.RegisterType((*CreateOrUpdateConfigRequest)(nil), "magma.orc8r.config.CreateOrUpdateConfigRequest")
	proto.RegisterType((*NetworkIdRequest)(nil), "magma.orc8r.config.NetworkIdRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigServiceClient is the client API for ConfigService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigServiceClient interface {
	// Fetch the value of a specific config.
	GetConfig(ctx context.Context, in *GetOrDeleteConfigRequest, opts ...grpc.CallOption) (*Config, error)
	// Fetch configs given some filter critiera (type, key, or both).
	// The returned map will contain marshaled configs keyed by a concatenated
	// (type, key) identifier.
	// Use `storage.GetCompositeConfigKey` to key into the returned map
	GetConfigs(ctx context.Context, in *GetOrDeleteConfigsRequest, opts ...grpc.CallOption) (*GetConfigsResponse, error)
	// List all keys for a given config type
	ListKeysForType(ctx context.Context, in *ListKeysForTypeRequest, opts ...grpc.CallOption) (*ListKeysForTypeResponse, error)
	CreateConfig(ctx context.Context, in *CreateOrUpdateConfigRequest, opts ...grpc.CallOption) (*protos.Void, error)
	UpdateConfig(ctx context.Context, in *CreateOrUpdateConfigRequest, opts ...grpc.CallOption) (*protos.Void, error)
	DeleteConfig(ctx context.Context, in *GetOrDeleteConfigRequest, opts ...grpc.CallOption) (*protos.Void, error)
	// Delete all configs matching  filter criteria (type, key, or both).
	DeleteConfigs(ctx context.Context, in *GetOrDeleteConfigsRequest, opts ...grpc.CallOption) (*protos.Void, error)
	// Delete all configs for a given network
	DeleteAllConfigsForNetwork(ctx context.Context, in *NetworkIdRequest, opts ...grpc.CallOption) (*protos.Void, error)
}

type configServiceClient struct {
	cc *grpc.ClientConn
}

func NewConfigServiceClient(cc *grpc.ClientConn) ConfigServiceClient {
	return &configServiceClient{cc}
}

func (c *configServiceClient) GetConfig(ctx context.Context, in *GetOrDeleteConfigRequest, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.cc.Invoke(ctx, "/magma.orc8r.config.ConfigService/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) GetConfigs(ctx context.Context, in *GetOrDeleteConfigsRequest, opts ...grpc.CallOption) (*GetConfigsResponse, error) {
	out := new(GetConfigsResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.config.ConfigService/GetConfigs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) ListKeysForType(ctx context.Context, in *ListKeysForTypeRequest, opts ...grpc.CallOption) (*ListKeysForTypeResponse, error) {
	out := new(ListKeysForTypeResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.config.ConfigService/ListKeysForType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) CreateConfig(ctx context.Context, in *CreateOrUpdateConfigRequest, opts ...grpc.CallOption) (*protos.Void, error) {
	out := new(protos.Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.config.ConfigService/CreateConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) UpdateConfig(ctx context.Context, in *CreateOrUpdateConfigRequest, opts ...grpc.CallOption) (*protos.Void, error) {
	out := new(protos.Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.config.ConfigService/UpdateConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) DeleteConfig(ctx context.Context, in *GetOrDeleteConfigRequest, opts ...grpc.CallOption) (*protos.Void, error) {
	out := new(protos.Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.config.ConfigService/DeleteConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) DeleteConfigs(ctx context.Context, in *GetOrDeleteConfigsRequest, opts ...grpc.CallOption) (*protos.Void, error) {
	out := new(protos.Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.config.ConfigService/DeleteConfigs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) DeleteAllConfigsForNetwork(ctx context.Context, in *NetworkIdRequest, opts ...grpc.CallOption) (*protos.Void, error) {
	out := new(protos.Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.config.ConfigService/DeleteAllConfigsForNetwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigServiceServer is the server API for ConfigService service.
type ConfigServiceServer interface {
	// Fetch the value of a specific config.
	GetConfig(context.Context, *GetOrDeleteConfigRequest) (*Config, error)
	// Fetch configs given some filter critiera (type, key, or both).
	// The returned map will contain marshaled configs keyed by a concatenated
	// (type, key) identifier.
	// Use `storage.GetCompositeConfigKey` to key into the returned map
	GetConfigs(context.Context, *GetOrDeleteConfigsRequest) (*GetConfigsResponse, error)
	// List all keys for a given config type
	ListKeysForType(context.Context, *ListKeysForTypeRequest) (*ListKeysForTypeResponse, error)
	CreateConfig(context.Context, *CreateOrUpdateConfigRequest) (*protos.Void, error)
	UpdateConfig(context.Context, *CreateOrUpdateConfigRequest) (*protos.Void, error)
	DeleteConfig(context.Context, *GetOrDeleteConfigRequest) (*protos.Void, error)
	// Delete all configs matching  filter criteria (type, key, or both).
	DeleteConfigs(context.Context, *GetOrDeleteConfigsRequest) (*protos.Void, error)
	// Delete all configs for a given network
	DeleteAllConfigsForNetwork(context.Context, *NetworkIdRequest) (*protos.Void, error)
}

func RegisterConfigServiceServer(s *grpc.Server, srv ConfigServiceServer) {
	s.RegisterService(&_ConfigService_serviceDesc, srv)
}

func _ConfigService_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrDeleteConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.config.ConfigService/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).GetConfig(ctx, req.(*GetOrDeleteConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_GetConfigs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrDeleteConfigsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).GetConfigs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.config.ConfigService/GetConfigs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).GetConfigs(ctx, req.(*GetOrDeleteConfigsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_ListKeysForType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListKeysForTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).ListKeysForType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.config.ConfigService/ListKeysForType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).ListKeysForType(ctx, req.(*ListKeysForTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_CreateConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrUpdateConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).CreateConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.config.ConfigService/CreateConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).CreateConfig(ctx, req.(*CreateOrUpdateConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_UpdateConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrUpdateConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).UpdateConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.config.ConfigService/UpdateConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).UpdateConfig(ctx, req.(*CreateOrUpdateConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_DeleteConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrDeleteConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).DeleteConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.config.ConfigService/DeleteConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).DeleteConfig(ctx, req.(*GetOrDeleteConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_DeleteConfigs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrDeleteConfigsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).DeleteConfigs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.config.ConfigService/DeleteConfigs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).DeleteConfigs(ctx, req.(*GetOrDeleteConfigsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_DeleteAllConfigsForNetwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetworkIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).DeleteAllConfigsForNetwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.config.ConfigService/DeleteAllConfigsForNetwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).DeleteAllConfigsForNetwork(ctx, req.(*NetworkIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConfigService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.orc8r.config.ConfigService",
	HandlerType: (*ConfigServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfig",
			Handler:    _ConfigService_GetConfig_Handler,
		},
		{
			MethodName: "GetConfigs",
			Handler:    _ConfigService_GetConfigs_Handler,
		},
		{
			MethodName: "ListKeysForType",
			Handler:    _ConfigService_ListKeysForType_Handler,
		},
		{
			MethodName: "CreateConfig",
			Handler:    _ConfigService_CreateConfig_Handler,
		},
		{
			MethodName: "UpdateConfig",
			Handler:    _ConfigService_UpdateConfig_Handler,
		},
		{
			MethodName: "DeleteConfig",
			Handler:    _ConfigService_DeleteConfig_Handler,
		},
		{
			MethodName: "DeleteConfigs",
			Handler:    _ConfigService_DeleteConfigs_Handler,
		},
		{
			MethodName: "DeleteAllConfigsForNetwork",
			Handler:    _ConfigService_DeleteAllConfigsForNetwork_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config_service.proto",
}

func init() {
	proto.RegisterFile("config_service.proto", fileDescriptor_config_service_b0e44edaca911c13)
}

var fileDescriptor_config_service_b0e44edaca911c13 = []byte{
	// 478 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x61, 0x6f, 0xd3, 0x30,
	0x10, 0x5d, 0xd7, 0xae, 0xd0, 0x5b, 0x27, 0xc6, 0x69, 0x82, 0x2c, 0x08, 0xa9, 0xb2, 0x10, 0xaa,
	0x80, 0xa5, 0xa2, 0xec, 0xc3, 0xbe, 0xc2, 0xa6, 0x4e, 0x30, 0xc4, 0x44, 0x36, 0x98, 0xc4, 0x97,
	0x2a, 0xb4, 0xb7, 0x29, 0x6a, 0x5a, 0x07, 0xdb, 0x1b, 0xe4, 0x2f, 0xf3, 0x2b, 0x10, 0x76, 0xd2,
	0x66, 0x8d, 0x83, 0x52, 0x04, 0x9f, 0x7a, 0xb6, 0xde, 0xbd, 0xf3, 0xbb, 0xf7, 0x1a, 0xd8, 0x19,
	0xf1, 0xd9, 0x65, 0x78, 0x35, 0x94, 0x24, 0x6e, 0xc2, 0x11, 0x79, 0xb1, 0xe0, 0x8a, 0x23, 0x4e,
	0x83, 0xab, 0x69, 0xe0, 0x71, 0x31, 0x3a, 0x10, 0x9e, 0x41, 0xb8, 0xbb, 0xfa, 0xd4, 0xd3, 0x00,
	0xd9, 0x1b, 0xf1, 0xe9, 0x94, 0xcf, 0x0c, 0x9c, 0xed, 0x43, 0xfb, 0x50, 0x83, 0x06, 0x61, 0xa4,
	0x48, 0x20, 0x42, 0x43, 0x25, 0x31, 0x39, 0xb5, 0x4e, 0xad, 0xdb, 0xf2, 0x75, 0x8d, 0xdb, 0x50,
	0x9f, 0x50, 0xe2, 0xac, 0xeb, 0xab, 0xdf, 0x25, 0x3b, 0x82, 0xa6, 0xe9, 0xaa, 0x86, 0xc7, 0x1d,
	0xd8, 0xb8, 0x09, 0xa2, 0x6b, 0x72, 0xea, 0x9d, 0x5a, 0xb7, 0xed, 0x9b, 0x03, 0x53, 0xb0, 0x7b,
	0x4c, 0xea, 0x54, 0x1c, 0x51, 0x44, 0x8a, 0x0c, 0xa1, 0xf4, 0xe9, 0xdb, 0x35, 0x49, 0x85, 0x8f,
	0x01, 0x66, 0xa4, 0xbe, 0x73, 0x31, 0x19, 0x86, 0xe3, 0x94, 0xbe, 0x95, 0xde, 0xbc, 0x1d, 0xe3,
	0x01, 0x34, 0x2f, 0xf5, 0x8b, 0xf5, 0x98, 0xcd, 0x7e, 0xc7, 0x2b, 0xea, 0xf6, 0xf2, 0xca, 0xfc,
	0x14, 0xcf, 0xde, 0x01, 0x1e, 0x93, 0x9a, 0x4f, 0x93, 0x31, 0x9f, 0x49, 0xc2, 0x7d, 0xb8, 0x63,
	0x9a, 0xa4, 0x53, 0xeb, 0xd4, 0xbb, 0x9b, 0x7d, 0xb7, 0x9c, 0xd0, 0xcf, 0xa0, 0x6c, 0x08, 0x4e,
	0x41, 0x41, 0x45, 0x01, 0xd9, 0xe2, 0xd6, 0x8b, 0x8b, 0xab, 0x2f, 0x16, 0x7d, 0x02, 0x0f, 0xde,
	0x87, 0x52, 0x9d, 0x50, 0x22, 0x07, 0x5c, 0x9c, 0x27, 0x31, 0xfd, 0x3d, 0x3d, 0xdb, 0x83, 0x87,
	0x05, 0xb2, 0x54, 0x3e, 0x42, 0x63, 0x42, 0x89, 0xd1, 0xde, 0xf2, 0x75, 0xcd, 0x7e, 0xc0, 0xa3,
	0x43, 0x41, 0x81, 0xa2, 0x53, 0xf1, 0x29, 0x1e, 0x07, 0xff, 0x43, 0xdf, 0x22, 0x18, 0x8d, 0x7c,
	0x30, 0x5e, 0xc2, 0xf6, 0x87, 0x8c, 0xa8, 0xda, 0xb8, 0xfe, 0xcf, 0x0d, 0xd8, 0x32, 0xef, 0x3b,
	0x33, 0x7f, 0x07, 0xbc, 0x80, 0xd6, 0xdc, 0x67, 0x7c, 0x61, 0x73, 0xb3, 0xcc, 0x3a, 0xf7, 0x0f,
	0xde, 0xb3, 0x35, 0x24, 0x80, 0x45, 0x80, 0x70, 0xaf, 0x12, 0x73, 0x16, 0x6b, 0xf7, 0x69, 0x09,
	0x7c, 0x29, 0x8f, 0x6c, 0x0d, 0x23, 0xb8, 0xb7, 0xe4, 0x16, 0x3e, 0xb3, 0x35, 0xdb, 0xf3, 0xe1,
	0x3e, 0xaf, 0x84, 0x9d, 0x4f, 0x3b, 0x87, 0xb6, 0x31, 0x3b, 0x5d, 0x58, 0xcf, 0xba, 0x82, 0xf2,
	0x38, 0xb8, 0xf7, 0x6f, 0x35, 0x7c, 0xe6, 0xe1, 0xd8, 0xb0, 0xe6, 0xb1, 0xff, 0x88, 0xf5, 0x23,
	0xb4, 0xf3, 0xbb, 0x5d, 0xd1, 0x5c, 0x2b, 0xe5, 0x19, 0x6c, 0xdd, 0xb2, 0x6b, 0x55, 0x5b, 0xad,
	0xa4, 0x17, 0xe0, 0x1a, 0xf0, 0xeb, 0x28, 0x4a, 0xf1, 0x03, 0x2e, 0xd2, 0x64, 0xe3, 0x13, 0xdb,
	0x84, 0xe5, 0xd8, 0x5b, 0x89, 0xdf, 0xdc, 0xfd, 0xd2, 0x34, 0xdf, 0xf2, 0xaf, 0xe6, 0xf7, 0xd5,
	0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x62, 0xa8, 0x12, 0x0c, 0x06, 0x00, 0x00,
}

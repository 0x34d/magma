// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/eap.proto

package protos // import "magma/feg/gateway/services/eap/protos"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EapType int32

const (
	EapType_UNDEFINED EapType = 0
	EapType_AKA       EapType = 23
)

var EapType_name = map[int32]string{
	0:  "UNDEFINED",
	23: "AKA",
}
var EapType_value = map[string]int32{
	"UNDEFINED": 0,
	"AKA":       23,
}

func (x EapType) String() string {
	return proto.EnumName(EapType_name, int32(x))
}
func (EapType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eap_8166d6caf89d1aad, []int{0}
}

type EapMessage struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EapMessage) Reset()         { *m = EapMessage{} }
func (m *EapMessage) String() string { return proto.CompactTextString(m) }
func (*EapMessage) ProtoMessage()    {}
func (*EapMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_eap_8166d6caf89d1aad, []int{0}
}
func (m *EapMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EapMessage.Unmarshal(m, b)
}
func (m *EapMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EapMessage.Marshal(b, m, deterministic)
}
func (dst *EapMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EapMessage.Merge(dst, src)
}
func (m *EapMessage) XXX_Size() int {
	return xxx_messageInfo_EapMessage.Size(m)
}
func (m *EapMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EapMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EapMessage proto.InternalMessageInfo

func (m *EapMessage) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type EapSuccess struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	MasterSessionKey     []byte   `protobuf:"bytes,2,opt,name=master_session_key,json=masterSessionKey,proto3" json:"master_session_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EapSuccess) Reset()         { *m = EapSuccess{} }
func (m *EapSuccess) String() string { return proto.CompactTextString(m) }
func (*EapSuccess) ProtoMessage()    {}
func (*EapSuccess) Descriptor() ([]byte, []int) {
	return fileDescriptor_eap_8166d6caf89d1aad, []int{1}
}
func (m *EapSuccess) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EapSuccess.Unmarshal(m, b)
}
func (m *EapSuccess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EapSuccess.Marshal(b, m, deterministic)
}
func (dst *EapSuccess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EapSuccess.Merge(dst, src)
}
func (m *EapSuccess) XXX_Size() int {
	return xxx_messageInfo_EapSuccess.Size(m)
}
func (m *EapSuccess) XXX_DiscardUnknown() {
	xxx_messageInfo_EapSuccess.DiscardUnknown(m)
}

var xxx_messageInfo_EapSuccess proto.InternalMessageInfo

func (m *EapSuccess) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *EapSuccess) GetMasterSessionKey() []byte {
	if m != nil {
		return m.MasterSessionKey
	}
	return nil
}

type EapResult struct {
	// Types that are valid to be assigned to Payload:
	//	*EapResult_Response
	//	*EapResult_Success
	Payload              isEapResult_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *EapResult) Reset()         { *m = EapResult{} }
func (m *EapResult) String() string { return proto.CompactTextString(m) }
func (*EapResult) ProtoMessage()    {}
func (*EapResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_eap_8166d6caf89d1aad, []int{2}
}
func (m *EapResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EapResult.Unmarshal(m, b)
}
func (m *EapResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EapResult.Marshal(b, m, deterministic)
}
func (dst *EapResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EapResult.Merge(dst, src)
}
func (m *EapResult) XXX_Size() int {
	return xxx_messageInfo_EapResult.Size(m)
}
func (m *EapResult) XXX_DiscardUnknown() {
	xxx_messageInfo_EapResult.DiscardUnknown(m)
}

var xxx_messageInfo_EapResult proto.InternalMessageInfo

type isEapResult_Payload interface {
	isEapResult_Payload()
}

type EapResult_Response struct {
	Response []byte `protobuf:"bytes,1,opt,name=response,proto3,oneof"`
}

type EapResult_Success struct {
	Success *EapSuccess `protobuf:"bytes,2,opt,name=success,proto3,oneof"`
}

func (*EapResult_Response) isEapResult_Payload() {}

func (*EapResult_Success) isEapResult_Payload() {}

func (m *EapResult) GetPayload() isEapResult_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *EapResult) GetResponse() []byte {
	if x, ok := m.GetPayload().(*EapResult_Response); ok {
		return x.Response
	}
	return nil
}

func (m *EapResult) GetSuccess() *EapSuccess {
	if x, ok := m.GetPayload().(*EapResult_Success); ok {
		return x.Success
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*EapResult) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _EapResult_OneofMarshaler, _EapResult_OneofUnmarshaler, _EapResult_OneofSizer, []interface{}{
		(*EapResult_Response)(nil),
		(*EapResult_Success)(nil),
	}
}

func _EapResult_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*EapResult)
	// payload
	switch x := m.Payload.(type) {
	case *EapResult_Response:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Response)
	case *EapResult_Success:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Success); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("EapResult.Payload has unexpected type %T", x)
	}
	return nil
}

func _EapResult_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*EapResult)
	switch tag {
	case 1: // payload.response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Payload = &EapResult_Response{x}
		return true, err
	case 2: // payload.success
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EapSuccess)
		err := b.DecodeMessage(msg)
		m.Payload = &EapResult_Success{msg}
		return true, err
	default:
		return false, nil
	}
}

func _EapResult_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*EapResult)
	// payload
	switch x := m.Payload.(type) {
	case *EapResult_Response:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Response)))
		n += len(x.Response)
	case *EapResult_Success:
		s := proto.Size(x.Success)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*EapMessage)(nil), "eap.eap_message")
	proto.RegisterType((*EapSuccess)(nil), "eap.eap_success")
	proto.RegisterType((*EapResult)(nil), "eap.eap_result")
	proto.RegisterEnum("eap.EapType", EapType_name, EapType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EapServiceClient is the client API for EapService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EapServiceClient interface {
	Handle(ctx context.Context, in *EapMessage, opts ...grpc.CallOption) (*EapResult, error)
}

type eapServiceClient struct {
	cc *grpc.ClientConn
}

func NewEapServiceClient(cc *grpc.ClientConn) EapServiceClient {
	return &eapServiceClient{cc}
}

func (c *eapServiceClient) Handle(ctx context.Context, in *EapMessage, opts ...grpc.CallOption) (*EapResult, error) {
	out := new(EapResult)
	err := c.cc.Invoke(ctx, "/eap.eap_service/handle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EapServiceServer is the server API for EapService service.
type EapServiceServer interface {
	Handle(context.Context, *EapMessage) (*EapResult, error)
}

func RegisterEapServiceServer(s *grpc.Server, srv EapServiceServer) {
	s.RegisterService(&_EapService_serviceDesc, srv)
}

func _EapService_Handle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EapMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EapServiceServer).Handle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eap.eap_service/Handle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EapServiceServer).Handle(ctx, req.(*EapMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _EapService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "eap.eap_service",
	HandlerType: (*EapServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "handle",
			Handler:    _EapService_Handle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/eap.proto",
}

func init() { proto.RegisterFile("protos/eap.proto", fileDescriptor_eap_8166d6caf89d1aad) }

var fileDescriptor_eap_8166d6caf89d1aad = []byte{
	// 276 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x53, 0x0b, 0x4d, 0x3b, 0x55, 0x0c, 0x73, 0x31, 0x88, 0x07, 0x09, 0x48, 0x45, 0x6a,
	0x03, 0xf5, 0xea, 0xa5, 0xa5, 0x95, 0x4a, 0xa1, 0x87, 0x48, 0x2f, 0x5e, 0xc2, 0x98, 0x8e, 0xb1,
	0x98, 0x3f, 0x4b, 0x26, 0x55, 0xf2, 0xed, 0x25, 0xbb, 0x69, 0xf4, 0xe2, 0x69, 0x77, 0x66, 0x7e,
	0xbc, 0x79, 0xf3, 0xc0, 0x51, 0x45, 0x5e, 0xe6, 0xe2, 0x33, 0xa9, 0x89, 0xfe, 0x62, 0x97, 0x49,
	0x79, 0x23, 0x18, 0x32, 0xa9, 0x30, 0x65, 0x11, 0x8a, 0x19, 0x5d, 0xb0, 0x15, 0x55, 0x49, 0x4e,
	0x3b, 0xb7, 0x73, 0xdd, 0xb9, 0x3d, 0x0d, 0x8e, 0xa5, 0xb7, 0x35, 0xa0, 0x1c, 0xa2, 0x88, 0x45,
	0xfe, 0x07, 0x71, 0x0c, 0x98, 0x92, 0x94, 0x5c, 0x84, 0xc2, 0x22, 0xfb, 0x3c, 0x0b, 0x3f, 0xb9,
	0x72, 0x4f, 0x34, 0xe4, 0x98, 0xc9, 0x8b, 0x19, 0xac, 0xb9, 0xf2, 0x22, 0x80, 0x5a, 0xb6, 0x60,
	0x39, 0x24, 0x25, 0x5e, 0x41, 0xbf, 0x60, 0x51, 0x79, 0x26, 0x6c, 0x64, 0x57, 0x56, 0xd0, 0x76,
	0x70, 0x0c, 0x76, 0xb3, 0x5e, 0xcb, 0x0d, 0xa7, 0xce, 0xa4, 0xbe, 0xe6, 0x8f, 0xad, 0x95, 0x15,
	0x1c, 0x91, 0xf9, 0xa0, 0x75, 0x78, 0xe7, 0x41, 0xbf, 0x86, 0xca, 0x4a, 0x31, 0x9e, 0xc1, 0x60,
	0xbb, 0x59, 0x2c, 0x9f, 0x9e, 0x37, 0xcb, 0x85, 0x63, 0xa1, 0x0d, 0xdd, 0xd9, 0x7a, 0xe6, 0x5c,
	0x4c, 0x1f, 0x9b, 0xfb, 0xb8, 0xf8, 0xda, 0x47, 0x8c, 0xf7, 0xd0, 0xfb, 0xa0, 0x6c, 0x97, 0x30,
	0xfe, 0x2e, 0x69, 0x42, 0xba, 0x3c, 0x6f, 0x3b, 0xc6, 0xb6, 0x67, 0xcd, 0x47, 0xaf, 0x37, 0x29,
	0xc5, 0x29, 0xf9, 0xef, 0x1c, 0xfb, 0x31, 0x95, 0xfc, 0x4d, 0x95, 0xdf, 0x68, 0xe9, 0xcc, 0x7d,
	0x13, 0xff, 0x5b, 0x4f, 0xbf, 0x0f, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x15, 0x39, 0xc1, 0x1d,
	0x8f, 0x01, 0x00, 0x00,
}
